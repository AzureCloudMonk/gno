$Id: doing.builds,v 1.1 1999/01/09 21:19:58 gdr-ftp Exp $

GNO has to be build in the following sequence.  (There are dependancies.)

	../lib/orcalibs/Source
	include
	lib/lsaneglue
	lib/libc
	lib/libutil
	lib/libedit


- the default target in the makefiles causes the program or library 
  to be built in the /obj hierarchy.

- the 'release' target causes the final files to be placed into the
  /dist hierarchy.

- when the builds are closer to a sane state the /dist hierarchy
  will be used to directly make a distribution.  However for now,
  we make use of another hierarchy, /gno into which we copy the
  /dist hierarchy.  The /gno hierarchy is then topped up with files
  from a v2.0.4 distribution.

- so, once the 'release' target has been made in all the relevent source
  directories, the following must occur:

	- start with an empty /gno directory.
	- copy the entire contents of /dist to /gno
	- make sure you have a /gno-hfs partition online
	- run the /src/gno/build.tools/fudgeinstall script
	- run the /src/gno/build.tools/mkboot script
	- run the /src/gno/build.tools/mkdisk1 script
	- go to the /gno directory.  Using gshk, archive all the 
	  directories you find there (such as gno.01, gno.02, etc).
	  You should create the files gno.01.shk, gno.02.shk, and so
	  forth.  Don't include the upper directory name in the archive.
	  When creating gno.16.shk, leave out the /install directory.
	- go to the /gno-hfs partition.  Archive up all contents of that
	  partition to create the gnohfs.shk archive.  The gnohfs.shk
	  file should be placed with the gno.??.shk files from the 
	  previous step.
	- go to the /gno.boot partition and use gshk to archive all
	  all the files in that partition.  Name the resulting archive
	  file gnoboot.shk, and place it with the other archive files.
	- run the /src/gno/build.tools/mkdisk2 script
