$Id: README.beta,v 1.2 1999/07/03 14:46:37 gdr-ftp Exp $

This is the README file for release beta 970304.  It probably needs more
detail.  Mail to gno-beta@gno.org with questions, comments, bitches, 
queries, complaints.

I suggest you don't mix these files up with those from other versions of
GNO, if you can help it.  It will keep things cleaner for later.

Manifest:
	orcacdefs	This directory contains only the defaults.h file used
			in Orca/C v2.1.x.  If you already have a defaults.h
			file, the contents of this one should be added to
			the one you already have.

			You will have to change the file type of this
			file.  Try 'chtyp -lcc *.h'.

	include		This is the majority of the new header files.
			They may either be placed in 13/orcacdefs, or
			they may be placed in another directory (such
			as /usr/include).  If the latter, ensure you 
			have Orca/C set up to search /usr/include (or
			whatever) before searching 13/orcacdefs.  This
			may be done with the -L occ(1) flag or the
			path pragma of Orca/C.

			You will have to change the file type of these
			files.  Try 'chtyp -lcc *.h'.

	HFSinclude	These are files that belong in the same hierarchy
			as those in the 'include' directory, but have
			non-ProDOS file names.  It is possible through the
			use of the path pragma to have this directory on
			an HFS volume and the include directory on a 
			ProDOS volume.

			You will have to change the file type of these
			files.  Try 'chtyp -lcc *.h'.

	usr.man		Manual pages, mostly for libc and libutil.  A
			work in progress.  ATTENTION:  See the file
			NOTES/notes.* for comments on nroff; these 
			pages will not currently display properly on the
			IIgs.

			Don't worry about .so link files for now; there
			is a util coming that will create them from the
			mkso.data file.

			Remember:  The newest man binary understands the
			MANPATH environment variable, so you can use more
			than just /usr/man to hold your man pages.

	lib/libc.v203	These are versions of libc.  One of these should
	lib/libc.v210	be selected based on which version of ORCALib you
	lib/libc.v211b2	are using.  Sorry, the earliest version of libc
			that I can build is for Orca/C v2.0.3.  When Orcalib
			is modified, it is likely that I will only be able
			to build libc for v2.1.x.

			The only one of these I have tested is for Orca/C 
			v2.1.1b2.  The selected library should be placed
			in your 13/ directory, which is presumably /lib.

			Currently, the libraries are built for the small
			memory model, and with no optimization.

	lib/libutil.203	Again, pick one to match your compiler.  The second
	lib/libutil.210 one can be used for generic Orca/C v2.1.x.  The 
			routines in this library are rarely used, so the
			library should go somewhere other than your 13/
			directory.  I suggest /usr/lib.

	NOTES/README.beta
			This file.

	NOTES/status	This lists which routines have been completed and
			their test status.  If you test routines that
			have not been marked with a 'T' as yet, please
			let me know the results via the gno-beta mailing
			list -- I would like to keep the list up-to-date.

	NOTES/deviations
			A list of deviations from various standards or
			conventions.

	NOTES/notes.*	Miscellaneous notes, mainly intended for Derek or
	NOTES/TO.DO	myself.  You may find something of interest.
	NOTES/headers
	NOTES/Contributers

If you are using a version of Orca/C earlier than v2.1.0, you should
ensure the macros
	__appleiigs__
	__GNO__
are defined for your programs.  This can be done by the -D occ(1) flag
or using #define in your program.

If you are using Orca/C v2.1.0 or later, you do not have to explicitly
define the above two macros as they are in the enclosed defaults.h file.
You _do_, however have to edit the __ORCAC_VERSION macro in the defaults.h
file to match your version of Orcalib.  Failure to do so may cause programs
using stdio to crash.
