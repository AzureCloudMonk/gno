#! /bin/gsh
#
# This is a script that builds a the bootstrap floppy used for
# installing GNO.
# 
# Devin Reade, April 1998.
#
# $Id: mkboot,v 1.5 1999/02/15 21:39:11 gdr-ftp Exp $

# What is our release directory?  (The second one must be HFS, and 
# may be the same as the first.)
setenv RELDIR	/gno
setenv RELDIR2	/gno-hfs
setenv RELBOOT	/gno.boot

# Where are the GNO (and other) sources?
setenv SRC	/src
setenv DIST	/dist

# Where do we keep the Finder.Data, Finder.Root, and icons files
# that are created on the GS and copied over to the GNO boot disk?
# Unfortunately, we can't put these into the repository because of
# their resource forks (unless we were to binscii them)
setenv BINSRC	/scratch/gnoboot.bins

# We need two scratch files for some operations
setenv JUNKFILE1	/tmp/finstall.junk1
setenv JUNKFILE2	/tmp/finstall.junk2

#==================================

echo "creating directories ..."
install -dV	$RELBOOT/Icons
install -dV	$RELBOOT/bin
install -dV	$RELBOOT/dev
install -dV	$RELBOOT/doc
install -dV	$RELBOOT/etc
install -dV	$RELBOOT/home/root
install -dV	$RELBOOT/lang/orca/languages
install -dV	$RELBOOT/lang/orca/shell
install -dV	$RELBOOT/lang/orca/utilities
install -dV	$RELBOOT/lib
install -dV	$RELBOOT/sbin
install -dV	$RELBOOT/tmp
install -dV	$RELBOOT/usr/bin
install -dV	$RELBOOT/var/adm

echo "installing files ..."
# There's a bug in the v2.0.6 kernel right now that keeps us from
# using it to boot "single user" straight into gsh (without initd).
# See PR#62.  In the interim, use a v2.0.4 kernel for the boot disk.
install -V	/trenco3/kern				$RELBOOT/kern
# install -V	$RELDIR/kern				$RELBOOT/kern
install -V	$RELDIR/bin/gsh				$RELBOOT
install -V	$SRC/gno/verbatim/boot/README.install	$RELBOOT
install -V	$SRC/gno/verbatim/boot/gshrc		$RELBOOT
install -V	$SRC/gno/verbatim/boot/initrc		$RELBOOT
install -V	$SRC/gno/verbatim/boot/installboot1	$RELBOOT
install -V	$SRC/gno/verbatim/boot/installboot2	$RELBOOT
install -V	$RELDIR/bin/chtyp			$RELBOOT/bin
install -V	$RELDIR/bin/cp				$RELBOOT/bin
install -V	$RELDIR/bin/gsh				$RELBOOT/bin
install -V	$RELDIR/bin/ls				$RELBOOT/bin
install -V	$RELDIR/bin/more			$RELBOOT/bin
install -V	$RELDIR/bin/sleep			$RELBOOT/bin
install -V	$RELDIR/bin/tee				$RELBOOT/bin
install -V	/usr/local/bin/touch			$RELBOOT/bin
install -V	$RELDIR/bin/vi				$RELBOOT/bin
install -V	$RELDIR/usr/bin/install			$RELBOOT/bin
install -V	$RELDIR/usr/bin/yankit			$RELBOOT/bin
install -V	$RELDIR/dev/*				$RELBOOT/dev
install -V	$SRC/gno/verbatim/etc/glogin		$RELBOOT/etc
install -V	$SRC/gno/verbatim/boot/namespace	$RELBOOT/etc
install -V	$RELDIR/etc/termcap			$RELBOOT/etc
install -V	$RELDIR/etc/tty.config			$RELBOOT/etc
install -V	$RELDIR/etc/ttys			$RELBOOT/etc
install -V	$RELDIR/sbin/mkso			$RELBOOT/sbin
install -V	$BINSRC/Finder.Root			$RELBOOT
install -V	$BINSRC/Finder.Data			$RELBOOT
install -V	$BINSRC/Icons/GNO.Icon			$RELBOOT/Icons

echo "creating the mklinks script"
echo '/^\#/d' > $JUNKFILE1
echo 's/^/install -V /' >> $JUNKFILE1
cat $DIST/install/mklink.* | sed -f $JUNKFILE1 > $JUNKFILE2
msort $JUNKFILE2 > $RELBOOT/tmp/mklinks

chtyp -lexec $RELBOOT/gshrc $RELBOOT/installboot* $RELBOOT/tmp/mklinks

echo "installing temporary files since gshk will not archive empty directories"
install 	$SRC/gno/verbatim/tmp/delete.me	$RELBOOT/doc
install 	$SRC/gno/verbatim/tmp/delete.me	$RELBOOT/home/root
install 	$SRC/gno/verbatim/tmp/delete.me	$RELBOOT/lang/orca/languages
install 	$SRC/gno/verbatim/tmp/delete.me	$RELBOOT/lang/orca/shell
install 	$SRC/gno/verbatim/tmp/delete.me	$RELBOOT/lang/orca/utilities
install 	$SRC/gno/verbatim/tmp/delete.me	$RELBOOT/lib
install 	$SRC/gno/verbatim/tmp/delete.me	$RELBOOT/usr/bin
install 	$SRC/gno/verbatim/tmp/delete.me	$RELBOOT/var/adm
